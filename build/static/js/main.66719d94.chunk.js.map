{"version":3,"sources":["component/ProductObject.tsx","component/ProductList.tsx","component/CategoryTab.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ProductObject","props","product","Grid","container","spacing","style","width","padding","margin","borderBottom","item","alt","name","src","Object","values","image_urls","height","direction","alignItems","Typography","variant","weight","weight_unit","final_price","color","price","Button","disabled","is_in_stock","borderRadius","backgroundColor","border","ProductList","categoryId","viewAll","useState","productList","setProductList","useEffect","fetch","then","res","json","console","log","catch","err","products","slice","map","index","key","useStyles","makeStyles","categoryTab","lineHeight","CategoryTab","classes","categories","setCategories","value","setValue","setViewAll","align","heading","Tabs","onChange","e","newValue","category_list","category","Tab","icon","className","background","category_image","backgroundSize","category_name","length","category_id","Select","fullWidth","event","target","MenuItem","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66719d94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IProduct } from \"../utils/interface\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\ninterface IProductObject{\r\n    product:IProduct\r\n}\r\nconst ProductObject=(props:IProductObject)=>{\r\n\r\n    const {product}=props\r\n\r\n    return(\r\n        <Grid container spacing={3} style={{width:'100%',padding:'20px 0px',margin:'0px',borderBottom:'1px solid rgb(204, 198, 198)'}}>\r\n            <Grid item style={{width:'30%'}}>\r\n                <img alt={product.name} src={Object.values(product.image_urls)[0]} width='100px' height='100px'/>\r\n            </Grid>\r\n            <Grid item style={{width:'60%'}}>\r\n                <Grid container direction='column' alignItems='flex-start'>\r\n                    <Typography variant='button'>{product.name}</Typography>\r\n                    <Typography variant='caption'>({product.weight} {product.weight_unit})</Typography>\r\n                    <Typography variant='button'>₹{product.final_price}  <del style={{color:'grey'}}>₹{product.price}</del></Typography>\r\n                    <Button disabled={!product.is_in_stock} style={{color:'white',width:'70%',borderRadius:'3px',backgroundColor:product.is_in_stock?'rgb(52, 197, 52)':'rgb(199, 193, 193)',border:'none'}}>{product.is_in_stock?'Add to cart':'Out of stock'}</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style={{width:'10%'}}>--</Grid>\r\n        </Grid>  \r\n)}\r\nexport default ProductObject","import React, { useState, useEffect } from \"react\";\r\nimport { IProductList } from \"../utils/interface\";\r\nimport ProductObject from \"./ProductObject\";\r\n\r\nconst ProductList = (props: any) => {\r\n  const { categoryId, viewAll } = props;\r\n  const [productList, setProductList] = useState({} as IProductList);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://backend.ustraa.com/rest/V1/api/catalog/v1.0.1?category_id=${categoryId}\r\n        `)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n       \r\n        setProductList(res);\r\n        console.log(res,productList)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryId ]);\r\n\r\n  const products = viewAll\r\n    ? productList.products && productList.products\r\n    : productList.products && productList.products.slice(0, 3);\r\n\r\n  return (\r\n    <>\r\n      {productList.products &&\r\n        products.map((product, index) => (\r\n          <ProductObject key={index} product={product} />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default ProductList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { ICategory } from \"../utils/interface\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport ProductList from \"./ProductList\";\r\n\r\nconst useStyles = makeStyles({\r\n  categoryTab: {\r\n    borderRadius: \"4px\",\r\n    height: \"60px\",\r\n    width: \"120px\",\r\n    color: \"white\",\r\n    lineHeight: \"60px\",\r\n    padding: \"20px\"\r\n  }\r\n});\r\n\r\nconst CategoryTab: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [categories, setCategories] = useState({} as ICategory);\r\n  const [value, setValue] = useState(0);\r\n  const [viewAll, setViewAll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://backend.ustraa.com/rest/V1/api/homemenucategories/v1.0.1?device_type=mob\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => setCategories(res))\r\n      .catch(err => err);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" align=\"left\" style={{ padding: \"16px\" }}>\r\n        {categories.heading}\r\n      </Typography>\r\n\r\n      <Tabs\r\n        value={value}\r\n        variant=\"scrollable\"\r\n        onChange={(e, newValue) => {\r\n          setValue(newValue);\r\n          setViewAll(false);\r\n        }}\r\n      >\r\n        {categories.category_list &&\r\n          categories.category_list.map((category, index) => (\r\n            <Tab\r\n              key={index}\r\n              value={index}\r\n              style={{ padding: \"12px 6px\" }}\r\n              icon={\r\n                <div\r\n                  className={classes.categoryTab}\r\n                  style={{\r\n                    background: `url(${category.category_image})`,\r\n                    backgroundSize: \"cover\"\r\n                  }}\r\n                >\r\n                  {category.category_name}\r\n                </div>\r\n              }\r\n            />\r\n          ))}\r\n      </Tabs>\r\n\r\n      {categories.category_list && categories.category_list.length && (\r\n        <ProductList\r\n          categoryId={categories.category_list[value].category_id}\r\n          viewAll={viewAll}\r\n        />\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        style={{ width: \"100%\", padding: \"12px\" }}\r\n        spacing={3}\r\n      >\r\n        <Grid item style={{ width: \"30%\" }}>\r\n          <Typography>Results for </Typography>\r\n        </Grid>\r\n        <Grid item style={{ width: \"40%\" }}>\r\n          <Select\r\n            fullWidth\r\n            value={value}\r\n            onChange={(event: React.ChangeEvent<{ value: any }>) => {\r\n              setValue(event.target.value);\r\n              setViewAll(false);\r\n            }}\r\n          >\r\n            {categories.category_list &&\r\n              categories.category_list.map((category, index) => (\r\n                <MenuItem key={index} value={index}>\r\n                  {category.category_name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </Grid>\r\n        <Grid item style={{ width: \"30%\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              setViewAll(!viewAll);\r\n            }}\r\n          >\r\n            {viewAll ? \"[-] View less\" : \"[+] View more\"}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTab;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport CategoryTab from './component/CategoryTab';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CategoryTab/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}